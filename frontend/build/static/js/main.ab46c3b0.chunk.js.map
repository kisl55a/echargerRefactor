{"version":3,"sources":["components/Main.module.css","components/Marker.js","components/StationInfo.js","components/BriefStationInfo.js","components/Charging.js","components/MainPage.js","components/Login.js","components/Registration.js","components/HistoryRow.js","components/Profile.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Marker","props","type","toLowerCase","isTaken","className","styles","station","alt","src","stationTaken","StationInfo","stationInfo","infoHeader","stationName","address","power","price","measure","isLoggedIn","UUID","cancelButtonMainPage","onClick","setCurrentStationToNull","setCurrentStation","setStation","info","zebra","searchRes","searchResTaken","Charging","isCharging","chargingInfo","toUpperCase","currentCharge","cost","timeOfUsage","energy","stopCharging","onSubmit","event","preventDefault","startCharging","target","value","noChargerNotification","name","buttonGreen","MainPage","gridForMenu","post1","logo","message","to","buttonBlue","logout","id","post2","placeholder","onChange","onSearchFilterUpdate","currentMarker","resultArray","length","map","item","i","BriefStationInfo","key","post3","idCharging","Login","generalGrid","registration","login","history","goBack","cancelButton","proceedButton","Register","register","setMessageToNull","HistoryRow","timeOfStart","substr","Profile","console","log","userHistory","filter","el","hidden","Boolean","window","location","hostname","match","options","position","positions","TOP_RIGHT","timeout","offset","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","useState","fetchData","setFetchData","setUserHistory","setMessage","setIsLoggedIn","username","setUsername","setPassword","token","setToken","setCurrentMarker","lat","lng","center","setCenter","zoom","setZoom","markers","setMarkers","arr","setArr","setIsCharging","setUUID","setIdCharging","setNoChargerNotification","setCurrentCharge","alert","useAlert","useEffect","axios","get","process","then","result","data","rows","catch","error","getUserHistory","interval","setInterval","refreshData","clearInterval","password","post","auth","a","response","success","email","textInputChange","indexOf","currentStation","put","headers","Authorization","path","exact","routeProps","getInfoAboutStation","slice","loader","color","height","width","visible","mapBlured","bootstrapURLKeys","onChildClick","childProps","marker","forEach","e","text","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.ab46c3b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Main_map__2A5Ok\",\"mapBlured\":\"Main_mapBlured__1vMs5\",\"mainInfo\":\"Main_mainInfo__HfHzs\",\"generalGrid\":\"Main_generalGrid__2Aljb\",\"registration\":\"Main_registration__9PmD5\",\"gridForMenu\":\"Main_gridForMenu__t4NZs\",\"post-1\":\"Main_post-1__20N_-\",\"post-2\":\"Main_post-2__1L0in\",\"post-3\":\"Main_post-3__1aiSU\",\"da\":\"Main_da__192AR\",\"searchRes\":\"Main_searchRes__uCSW3\",\"searchResTaken\":\"Main_searchResTaken___mryC\",\"station\":\"Main_station__Eh8No\",\"stationTaken\":\"Main_stationTaken__3w6ty\",\"logo\":\"Main_logo__Nqnmz\",\"buttonGreen\":\"Main_buttonGreen__2t2go\",\"buttonBlue\":\"Main_buttonBlue__2ejNs\",\"proceedButton\":\"Main_proceedButton__3c4Vx\",\"cancelButton\":\"Main_cancelButton__25PgW\",\"cancelButtonMainPage\":\"Main_cancelButtonMainPage__doyqb\",\"zebra\":\"Main_zebra__Yj0hC\",\"infoHeader\":\"Main_infoHeader__28sSP\",\"stationInfo\":\"Main_stationInfo__SiEFV\",\"property\":\"Main_property__Mtkn0\",\"chargingInfo\":\"Main_chargingInfo__3CoSJ\",\"loader\":\"Main_loader__3bmMG\"};","import React from 'react';\n\nimport styles from './Main.module.css';\n\nexport default function Marker(props) {\n    return (\n        <div>\n            {/* {console.log(props)} */}\n            {\n                (props.type.toLowerCase() === \"fast\") ?\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"fastCharge\" src={'/images/Charging.png'}></img> :\n                        <img className={styles.stationTaken} alt=\"fastCharge\" src={`/images/Charging.png`}></img>\n                    )\n                    :\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"slowCharge\" src={`/images/slow.png`}></img> :\n                        <img className={styles.stationTaken} alt=\"slowCharge\" src={`/images/slow.png`}></img>)\n            }\n        </div>\n)}\n\n","import React from 'react';\nimport styles from './Main.module.css';\n\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nconst StationInfo = (props) => {\n    function back() {\n        props.setCurrentStationToNull();\n    }\n    return (<div className={styles.stationInfo}>\n\n        <h4 className={styles.infoHeader}>\n            {props.stationName}\n        </h4>\n\n        <div>\n            Status: {(props.isTaken === 1) ? \"Taken\" : \" Free\"}\n        </div>\n        <div>\n            Address: {props.address}\n        </div>\n\n        <div>\n            Type: {props.type}\n        </div>\n        <div>\n            Power: {props.power} <sup>kWh</sup>\n        </div>\n        <div>\n            Price: {props.price}<sup>{props.measure}</sup>\n        </div>\n        {\n            (props.isLoggedIn) ?\n            <div>  Identifier: {props.UUID}</div> :\n            <div></div>\n        }\n        <div> <button className={styles.cancelButtonMainPage} onClick={back}> Back </button></div>\n    </div>)\n\n}\n\nexport default StationInfo;","import React from 'react';\nimport styles from './Main.module.css';\n\nconst StationInfo = (props) => {\n\n    function setCurrentStation() {\n        props.setStation(props.info)\n    }\n\n    if (props.info.isTaken !== 1) {\n        return (<div className={styles.zebra}>\n\n            <div className={styles.searchRes} onClick={setCurrentStation}>\n                {props.info.stationName}\n            </div>\n        </div>)\n    } else {\n        return (<div className={styles.zebra}>\n            \n            <div className={styles.searchResTaken} onClick={setCurrentStation}>\n                {props.info.stationName}\n            </div>\n        </div>)\n    }\n\n\n}\n\nexport default StationInfo;","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Charging(props) {\n  function startCharging(event) {\n    event.preventDefault();\n    props.startCharging(\n      event.target['identifier'].value,\n    );\n  }\n\n  return (\n    <div>\n      {(props.isCharging)\n        ?\n        <div className={styles.chargingInfo}>\n          <h5 className={styles.infoHeader}> Station UUID:\n         {props.UUID.toUpperCase()} </h5>\n          <div>The price:\n        {props.currentCharge.cost} <sup>EUR</sup> </div>\n          <div> Your time:\n        {props.currentCharge.timeOfUsage} <sup>min</sup> </div>\n          Your energy:\n        {props.currentCharge.energy} <sup>kWh</sup>\n          <br></br>\n          <button className={styles.cancelButtonMainPage} onClick={props.stopCharging}> Stop charging</button>\n        </div>\n        : <form onSubmit={startCharging}>\n          <div>\n            Enter the Identifier\n      </div>\n          <div> {props.noChargerNotification}</div>\n          <input type=\"text\" name=\"identifier\" />\n          <button type='submit' className={styles.buttonGreen}> Start charging</button>\n        </form>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './Main.module.css';\nimport StationInfo from './StationInfo';\nimport BriefStationInfo from './BriefStationInfo';\nimport Charging from './Charging'\n\nexport default function MainPage(props) {\n  function updateSearchFilter(event) {\n    props.onSearchFilterUpdate(event.target.value)\n  }\n\n  return (\n    <div className={styles.gridForMenu}>\n      <div className={styles.post1}>\n        <img className={styles.logo} alt=\"logo\" src={`images/logo.png`}></img>\n        <br></br>\n        {(props.isLoggedIn !== true) ?\n          <div>\n            <div> {props.message}</div>\n            <Link to=\"/login\">\n              <button className={styles.buttonGreen}> Login </button>\n            </Link>\n            <Link to=\"/registration\">\n              <button className={styles.buttonGreen}>Registration</button>\n            </Link>\n          </div>\n          :\n          <div>\n            <Link to=\"/profile\">\n              <button className={styles.buttonGreen}>Profile</button>\n            </Link>\n            <button className={styles.buttonBlue} onClick={props.logout}>Logout</button>\n          </div>\n        }\n\n      </div>\n      <div id=\"mainInfo\" className={styles.post2}>\n        <div id=\"infoAboutStation\">\n          <h3> Choose station on the map/list or search</h3>\n          <input type=\"search\" placeholder=\"Search \" onChange={updateSearchFilter} /> <br></br>\n          {(props.currentMarker.stationName) ?\n            <StationInfo {...props.currentMarker} setCurrentStationToNull={props.setCurrentStationToNull} isLoggedIn={props.isLoggedIn} />\n            : (props.resultArray.length === 0) ? \" No results\" : props.resultArray.map((item, i) => (\n              <BriefStationInfo key={i} setStation={props.setStation} setCurrentStationToNull={props.setCurrentStationToNull} info={item} />\n            ))}\n        </div>\n\n        <br></br>\n\n      </div>\n\n      <div className={styles.post3}>\n        {(props.isLoggedIn)\n          ? <Charging\n            startCharging={props.startCharging}\n            noChargerNotification={props.noChargerNotification}\n            isCharging={props.isCharging}\n            idCharging={props.idCharging}\n            UUID={props.UUID}\n            currentCharge={props.currentCharge}\n            stopCharging={props.stopCharging}\n          />\n          : \"You can start charging when you are logged in\"}\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Login(props) {\n  function login(event) {\n    event.preventDefault();\n    props.login(\n      event.target['name'].value,\n      event.target['password'].value,\n    );\n    props.history.goBack();\n  }\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n  }\n\n  return (\n    // eslint-disable-next-line\n    <div className={styles.generalGrid, styles.registration}>\n      <h2> Login </h2>\n      <form onSubmit={login}>\n        <div>\n          Nickname\n        </div>\n        <input type=\"text\" name=\"name\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password\" />\n        <button className={styles.cancelButton} onClick={cancel}>Cancel</button>\n        <button className={styles.proceedButton} type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Register(props) {\n\n  function register(event) {\n    event.preventDefault();\n    if (event.target['password'].value !== event.target['password1'].value) {\n    } else {\n      props.register(\n        event.target['username'].value,\n        event.target['email'].value,\n        event.target['password'].value,\n      );\n      if (props.message === \"Created\")\n        props.history.goBack();\n    }\n  }\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n    props.setMessageToNull();\n  }\n\n  return (\n    // eslint-disable-next-line \n    <div className={styles.generalGrid, styles.registration}>\n      <form onSubmit={register}>\n        <h2>Registration</h2>\n        <div>\n          Username\n        </div>\n        <input type=\"text\" name=\"username\" />\n        <div>\n          Email\n        </div>\n        <input type=\"text\" name=\"email\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password1\" />\n        <br></br>\n        <button className={styles.cancelButton} onClick={cancel}>Back</button>\n        <button className={styles.proceedButton} type=\"submit\">Register</button>\n        <div id=\"message\" > {(props.message === \"Incorrect username or password\") ? \"\" : props.message} </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function HistoryRow(props) {\n    return (\n        <tr>\n            <th>{props.UUID}</th>\n            <th>{props.timeOfStart.substr(0, 9)}</th>\n            <th> {props.energy}</th>\n            <th>{props.timeOfUsage} </th>\n            <th>{props.cost} </th>\n            {/* {console.log(props)} */}\n        </tr>\n    )\n}\n","import React from 'react'\nimport styles from './Main.module.css';\nimport HistoryRow from './HistoryRow'\nexport default function Profile(props) {\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n  }\nconsole.log(props.userHistory);\n  return (\n    <div>\n      {(props.userHistory.length !== 0) ?\n        <table>\n          <tr>\n            <th>Station Number</th>\n            <th>Date</th>\n            <th>Energy(kWt)</th>\n            <th>Time of usage(min)</th>\n            <th>Cost(EUR)</th>\n          </tr>\n          <tbody>\n            {props.userHistory.filter(el => el.timeOfUsage !== 0).map((item, i) => (\n              <HistoryRow key={i} {...item} />\n            ))}\n          </tbody>\n        </table>\n        : \"You have no charges\"\n      }\n      <button className={styles.cancelButton} onClick={cancel}>Back</button>\n      <div id=\"message\" className={styles.hidden}> {props.message} </div>\n\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AlertTemplate from 'react-alert-template-basic'\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_RIGHT,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./components/Marker\";\nimport axios from \"axios\";\nimport styles from \"./components/Main.module.css\";\nimport MainPage from \"./components/MainPage\";\nimport Login from \"./components/Login\";\nimport Registration from \"./components/Registration\";\nimport StationInfo from \"./components/StationInfo\";\nimport Profile from \"./components/Profile\";\nimport Loader from \"react-loader-spinner\";\nimport { useAlert } from \"react-alert\";\n\nexport default function App(props) {\n  const [fetchData, setFetchData] = useState(false);\n  const [userHistory, setUserHistory] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  // eslint-disable-next-line\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [currentMarker, setCurrentMarker] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 65.01,\n    lng: 25.49,\n  });\n  const [zoom, setZoom] = useState(13);\n  const [markers, setMarkers] = useState([]);\n  const [arr, setArr] = useState([]);\n  const [isCharging, setIsCharging] = useState(false);\n  const [UUID, setUUID] = useState(\"\");\n  const [idCharging, setIdCharging] = useState(\"\");\n  const [noChargerNotification, setNoChargerNotification] = useState(\"\");\n  const [currentCharge, setCurrentCharge] = useState({});\n  const alert = useAlert();\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_ENDPOINT}/v1/stations/getAllStations`)\n      .then((result) => {\n        setMarkers(result.data.rows);\n        setArr(result.data.rows);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_ENDPOINT}/v1/stations/getAllStations`)\n      .then((result) => {\n        setMarkers(result.data.rows);\n        setArr(result.data.rows);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    if (token !== \"\") {\n      getUserHistory();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchData, token]);\n\n  useEffect(() => {\n    if (idCharging && isCharging) {\n      const interval = setInterval(() => {\n        refreshData();\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [idCharging]);\n\n  const logout = () => {\n    stopCharging();\n    setIsLoggedIn(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setUUID(\"\");\n    setToken(\"\");\n    setMessage(\"\");\n  };\n\n  const login = (username, password) => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_ENDPOINT}/v1/users/login`,\n        {},\n        {\n          auth: {\n            username,\n            password,\n          },\n        }\n      )\n      .then(async (response) => {\n        setIsLoggedIn(true);\n        setUsername(username);\n        setPassword(password);\n        setToken(response.data.token);\n        alert.success(\"Succesfully logged in\", {\n          timeout: 3000, // custom timeout just for this one alert\n        });\n      })\n      .catch((error) => {\n        alert.error(\"Incorrect username or password\", {\n          timeout: 3000, // custom timeout just for this one alert\n        });\n      });\n  };\n\n  const register = (username, email, password) => {\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/v1/users/register`, {\n        username: username,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        alert.success(\"Succesfully created\", {\n          timeout: 3000, // custom timeout just for this one alert\n        });\n      })\n      .catch((error) => {\n        alert.error(\"An error occured\", {\n          timeout: 3000, // custom timeout just for this one alert\n        });\n      });\n  };\n\n  const setMessageToNull = () => setMessage(\"\");\n  const textInputChange = (value) => {\n    setArr(\n      markers.filter(\n        ({ stationName }) =>\n          stationName.toLowerCase().indexOf(value.toLowerCase()) >= 0\n      )\n    );\n    setCurrentMarker({});\n  };\n\n  const setCurrentStation = (currentStation) => {\n    setCurrentMarker(currentStation);\n    setCenter({\n      lat: currentStation.lat,\n      lng: currentStation.lng,\n    });\n    setZoom(16);\n  };\n\n  const setCurrentStationToNull = () => {\n    setCurrentMarker({});\n  };\n\n  const refreshData = async () => {\n    axios\n      .put(\n        `${process.env.REACT_APP_API_ENDPOINT}/v1/stations/chargingProcess/${idCharging}`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        setCurrentCharge({ ...response.data.rows[0] });\n      })\n      .catch();\n    await getUserHistory();\n  };\n\n  const getUserHistory = async () => {\n    await axios\n      .get(\n        `${process.env.REACT_APP_API_ENDPOINT}/v1/users/history/userHistory`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        setUserHistory(response.data.rows);\n      })\n\n      .catch((error) => console.log(error));\n  };\n\n  const stopCharging = async () => {\n    setIsCharging(false);\n    if (idCharging) {\n      await axios\n        .put(\n          `${process.env.REACT_APP_API_ENDPOINT}/v1/stations/stopCharging/${idCharging}`,\n          {},\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        )\n        .then(async (response) => {\n          setFetchData(!fetchData);\n          alert.info(\"Stopped charging\", {\n            timeout: 3000, // custom timeout just for this one alert\n          });\n        })\n        .catch((error) => console.log(error));\n    }\n    setIdCharging(0);\n  };\n\n  const startCharging = async (UUID) => {\n    if (UUID === \"\") {\n      UUID = 0;\n    }\n    await axios\n      .post(\n        `${process.env.REACT_APP_API_ENDPOINT}/v1/stations/startCharging/${UUID}`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then(async (response) => {\n        if (response.data !== false) {\n          setIsCharging(true);\n          setUUID(UUID);\n          setIdCharging(response.data.rows[0].id);\n          setNoChargerNotification(\"\");\n          setCurrentCharge({\n            cost: 0,\n            timeOfUsage: 0,\n            energy: 0,\n          });\n          setFetchData(!fetchData);\n          alert.success(\"Started charging\", {\n            timeout: 3000, // custom timeout just for this one alert\n          });\n        } else {\n          alert.info(\"No charger with such ID or it's taken already\", {\n            timeout: 6000, // custom timeout just for this one alert\n          });\n        }\n      })\n      .catch((error) => {\n\t\talert.info(\"No charger with such ID or it's taken already\", {\n            timeout: 3000, // custom timeout just for this one alert\n          });\n        console.error(error);\n      });\n  };\n\n  const _onChildClick = (key, childProps) => {\n    let marker;\n    markers.forEach((e) => {\n      if (e.stationName === childProps.text) {\n        marker = e;\n      }\n    });\n    setCenter({\n      lat: childProps.lat,\n      lng: childProps.lng,\n    });\n    setZoom(16);\n    setCurrentMarker(marker);\n  };\n  return (\n    <div className={styles.generalGrid}>\n      <main>\n        <Router>\n          <Route\n            path=\"/station/:id\"\n            exact\n            render={(routeProps) => (\n              <StationInfo\n                {...routeProps}\n                getInfoAboutStation={this.getInfoAboutStation}\n              />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            exact\n            render={(routeProps) => (\n              <Login\n                login={login}\n                {...routeProps}\n                username={username}\n                message={message}\n                setMessageToNull={setMessageToNull}\n              />\n            )}\n          />\n          <Route\n            path=\"/profile\"\n            exact\n            render={(routeProps) => (\n              <Profile userHistory={userHistory} {...routeProps} />\n            )}\n          />\n          <Route\n            path=\"/registration\"\n            exact\n            render={(routeProps) => (\n              <Registration\n                {...routeProps}\n                register={register}\n                message={message}\n                setMessageToNull={setMessageToNull}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            exact\n            render={(routeProps) => (\n              <MainPage\n                logout={logout}\n                message={message}\n                currentMarker={currentMarker}\n                isLoggedIn={isLoggedIn}\n                onSearchFilterUpdate={textInputChange}\n                resultArray={arr.slice(0, 7)}\n                setStation={setCurrentStation}\n                setCurrentStationToNull={setCurrentStationToNull}\n                startCharging={startCharging}\n                noChargerNotification={noChargerNotification}\n                isCharging={isCharging}\n                UUID={UUID}\n                idCharging={idCharging}\n                currentCharge={currentCharge}\n                stopCharging={stopCharging}\n              />\n            )}\n          />\n        </Router>\n      </main>\n\n      <Loader\n        className={styles.loader}\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={\"10rem\"}\n        width={\"10rem\"}\n        timeout={1000000}\n        visible={markers.length === 0 ? true : false}\n      />\n\n      <div className={markers.length === 0 ? styles.mapBlured : styles.map}>\n        <GoogleMapReact\n          center={center}\n          bootstrapURLKeys={{ key: process.env.REACT_APP_MAPS_API }}\n          zoom={zoom}\n          onChildClick={_onChildClick}\n        >\n          {markers.map((item, i) => (\n            <Marker\n              key={i}\n              lat={item.lat}\n              lng={item.lng}\n              isTaken={item.isTaken}\n              type={item.type}\n              text={item.stationName}\n            />\n          ))}\n        </GoogleMapReact>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}